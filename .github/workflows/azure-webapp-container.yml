name: Deploy to Azure Web App (Container)

on:
  workflow_dispatch:
    inputs:
      os:
        description: "Runner OS (ubuntu-latest | macos-latest | windows-latest)"
        required: false
        default: windows-latest
  push:
    tags: [ 'deploy-azure-*' ]

jobs:
  build-and-deploy:
    runs-on: ${{ inputs.os || 'windows-latest' }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        shell: pwsh
        run: dotnet restore HRHelper.sln

      - name: Build
        shell: pwsh
        run: dotnet build HRHelper.sln -c Release --no-restore

      - name: Log in to Azure Container Registry (if used)
        if: env.ACR_LOGIN_SERVER != ''
        uses: azure/docker-login@v2
        with:
          login-server: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push container image
        shell: pwsh
        run: |
          if ('${{ env.ACR_LOGIN_SERVER }}' -ne '') {
            $IMAGE = "${{ env.ACR_LOGIN_SERVER }}/hrhelper:${{ github.sha }}"
          } else {
            $IMAGE = "hrhelper:${{ github.sha }}"
          }
          echo "IMAGE=$IMAGE" | Out-File -FilePath $Env:GITHUB_ENV -Append
          docker build -t $IMAGE -f src/HRHelper/Dockerfile .
          if ('${{ env.ACR_LOGIN_SERVER }}' -ne '') { docker push $IMAGE }

      - name: Azure Web App Deploy (Container)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: ${{ env.ACR_LOGIN_SERVER != '' && format('{0}/hrhelper:{1}', env.ACR_LOGIN_SERVER, github.sha) || format('hrhelper:{0}', github.sha) }}
        env:
          AZURE_WEBAPP_NAME: hrhelper-app
          ACR_LOGIN_SERVER: ''
